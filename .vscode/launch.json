#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2020/8/3 0003 10:42
from __future__ import print_function
import os
import sys
import json
import uuid
import shutil
import platform
from datetime import datetime
import errno

def get_storage_path():
    """Lấy đường dẫn tệp cấu hình"""
    system = platform.system().lower()
    home = os.path.expanduser('~')
    
    if system == 'windows':
        return os.path.join(os.getenv('APPDATA'), 'Cursor', 'User', 'globalStorage', 'storage.json')
    elif system == 'darwin':  # macOS
        return os.path.join(home, 'Library', 'Application Support', 'Cursor', 'User', 'globalStorage', 'storage.json')
    else:  # Linux
        return os.path.join(home, '.config', 'Cursor', 'User', 'globalStorage', 'storage.json')

def generate_random_id():
    """Tạo ID ngẫu nhiên (64 bit hex)"""
    return uuid.uuid4().hex + uuid.uuid4().hex

def generate_uuid():
    """Tạo UUID"""
    return str(uuid.uuid4())

def backup_file(file_path):
    """Tạo bản sao lưu của tệp cấu hình"""
    if os.path.exists(file_path):
        backup_path = '{}.backup_{}'.format(
            file_path,
            datetime.now().strftime('%Y%m%d_%H%M%S')
        )
        shutil.copy2(file_path, backup_path)
        print('Đã tạo tệp sao lưu:', backup_path)

def ensure_dir_exists(path):
    """Đảm bảo thư mục tồn tại (tương thích Python 2/3)"""
    if not os.path.exists(path):
        try:
            os.makedirs(path)
        except OSError as e:
            if e.errno != errno.EEXIST:
                raise

def update_storage_file(file_path):
    """Cập nhật ID trong tệp lưu trữ"""
    # Tạo ID mới
    new_machine_id = generate_random_id()
    new_mac_machine_id = generate_random_id()
    new_dev_device_id = generate_uuid()
    
    # Đảm bảo thư mục tồn tại
    ensure_dir_exists(os.path.dirname(file_path))
    
    # Đọc hoặc tạo tệp cấu hình
    if os.path.exists(file_path):
        try:
            with open(file_path, 'r') as f:
                data = json.load(f)
        except ValueError:
            data = {}
    else:
        data = {}
    
    # Cập nhật ID
    data['telemetry.machineId'] = new_machine_id
    data['telemetry.macMachineId'] = new_mac_machine_id
    data['telemetry.devDeviceId'] = new_dev_device_id
    data['telemetry.sqmId'] = '{' + str(uuid.uuid4()).upper() + '}'
    
    # Ghi vào tệp
    with open(file_path, 'w') as f:
        json.dump(data, f, indent=4)
    
    return new_machine_id, new_mac_machine_id, new_dev_device_id

def main():
    """Hàm chính"""
    try:
        # Lấy đường dẫn tệp cấu hình
        storage_path = get_storage_path()
        print('Đường dẫn tệp cấu hình:', storage_path)
        
        # Sao lưu tệp gốc
        backup_file(storage_path)
        
        # Cập nhật ID
        machine_id, mac_machine_id, dev_device_id = update_storage_file(storage_path)
        
        # In kết quả
        print('\nĐã thay đổi ID thành công:')
        print('machineId:', machine_id)
        print('macMachineId:', mac_machine_id)
        print('devDeviceId:', dev_device_id)
        
    except Exception as e:
        print('Lỗi:', str(e), file=sys.stderr)
        sys.exit(1)

if __name__ == '__main__':
    main()